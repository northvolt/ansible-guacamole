---
- name: config | Ensuring Guacamole Folders Exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"
  become: true
  with_items:
    - /etc/guacamole
    - /etc/guacamole/lib
    - /etc/guacamole/extensions

- name: config | Configuring guacamole.properties
  template:
    src: etc/guacamole/guacamole.properties.j2
    dest: /etc/guacamole/guacamole.properties
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"
  become: true
  notify:
    - "restart {{ guacamole_tomcat_service }}"
    - kill guacd
    - restart guacd

- name: config | Configuring user-mapping.xml
  template:
    src: etc/guacamole/user-mapping.xml.j2
    dest: /etc/guacamole/user-mapping.xml
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"
  become: true
  notify:
    - "restart {{ guacamole_tomcat_service }}"
    - kill guacd
    - restart guacd
  when: not guacamole_mysql_auth and not guacamole_postgresql_auth

- name: config | Downloading Auth JDBC Library
  unarchive:
    src: "{{ guacamole_dl_url + '/binary/' + guacamole_auth_jdbc_package }}"
    dest: "{{ guacamole_src_dir }}"
    remote_src: true
  become: true
  when: guacamole_mysql_auth or guacamole_postgresql_auth

- name: config | Copying Auth JDBC Connector
  copy:
    src: "{{ guacamole_src_dir + '/' + 'guacamole-auth-jdbc-' + guacamole_version + '/mysql/' + 'guacamole-auth-jdbc-mysql-' + guacamole_version + '.jar' }}"
    dest: /etc/guacamole/extensions/
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"
    remote_src: true
  become: true
  when: guacamole_mysql_auth

- name: config | Copying Auth JDBC Connector
  copy:
    src: "{{ guacamole_src_dir + '/' + 'guacamole-auth-jdbc-' + guacamole_version + '/postgresql/' + 'guacamole-auth-jdbc-postgresql-' + guacamole_version + '.jar' }}"
    dest: /etc/guacamole/extensions/
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"
    remote_src: true
  become: true
  when: guacamole_postgresql_auth

- name: config | Downloading MySQL Connector
  unarchive:
    src: "{{ guacamole_mysql_connector_package }}"
    dest: "{{ guacamole_src_dir }}"
    remote_src: true
  become: true
  when: guacamole_mysql_auth

- name: config | Copying MySQL Connector
  copy:
    src: "{{ guacamole_src_dir + '/' + 'mysql-connector-java-' + guacamole_mysql_connector_version + '/' +'mysql-connector-java-' + guacamole_mysql_connector_version + '.jar' }}" # noqa 204
    dest: /etc/guacamole/lib/
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"
    remote_src: true
  become: true
  when: guacamole_mysql_auth

- name: config | Downloading PostgreSQL Connector
  get_url:
    url: "{{ guacamole_postgresql_connector_package }}"
    dest: "{{ guacamole_src_dir }}"
  become: true
  when: guacamole_postgresql_auth

- name: config | Copying PostgreSQL Connector
  copy:
    src: "{{ guacamole_src_dir + '/' + 'postgresql-' + guacamole_postgresql_connector_version + '.jar' }}"
    dest: /etc/guacamole/lib/
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"
    remote_src: true
  become: true
  when: guacamole_postgresql_auth

- name: config | Downloading Auth OpenID Library
  unarchive:
    src: "{{ guacamole_dl_url + '/binary/' + guacamole_auth_openid_package }}"
    dest: "{{ guacamole_src_dir }}"
    remote_src: true
  become: true
  when: guacamole_openid_auth

- name: config | Copying Auth OpenID Connector
  copy:
    src: "{{ guacamole_src_dir + '/' + 'guacamole-auth-sso-' + guacamole_version + '/openid/' + 'guacamole-auth-sso-openid-' + guacamole_version + '.jar' }}"
    dest: "{{ '/etc/guacamole/extensions/' + guacamole_auth_openid_priority + 'guacamole-auth-sso-openid-' + guacamole_version + '.jar' }}"
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"
    remote_src: true
  become: true
  when: guacamole_openid_auth

- name: config | Creating Guacamole DB
  mysql_db:
    name: "{{ guacamole_mysql_db['name'] }}"
    login_host: "{{ guacamole_mysql_db['host'] }}"
    login_port: "{{ guacamole_mysql_db['port'] }}"
    state: present
  become: true
  when: guacamole_mysql_auth

- name: config | Creating Guacamole DB User
  mysql_user:
    name: "{{ guacamole_mysql_db['username'] }}"
    password: "{{ guacamole_mysql_db['password'] }}"
    login_host: "{{ guacamole_mysql_db['host'] }}"
    login_port: "{{ guacamole_mysql_db['port'] }}"
    priv: "{{ guacamole_mysql_db['name'] + '.*:GRANT,SELECT,INSERT,UPDATE,DELETE' }}"
    state: present
  become: true
  when: guacamole_mysql_auth

- name: config | Popluating DB
  mysql_db:
    name: "{{ guacamole_mysql_db['name'] }}"
    login_host: "{{ guacamole_mysql_db['host'] }}"
    login_port: "{{ guacamole_mysql_db['port'] }}"
    state: import
    target: "{{ guacamole_src_dir + '/' + 'guacamole-auth-jdbc-' + guacamole_version + '/mysql/schema/' + item }}"
  become: true
  register: _guacamole_db_populated
  notify:
    - "restart {{ guacamole_tomcat_service }}"
    - kill guacd
    - restart guacd
  with_items:
    - 001-create-schema.sql
    - 002-create-admin-user.sql
  when: >
    guacamole_mysql_auth and
    not _guacamole_db_populated_check['stat']['exists']

- name: config | Checking If DB Has Been Populated
  stat:
    path: /etc/guacamole/.db_populated
  register: _guacamole_db_populated_check
  when: guacamole_mysql_auth

- name: config | Marking DB As Populated # noqa 503
  file:
    path: /etc/guacamole/.db_populated
    state: touch
  become: true
  when: >
    (guacamole_mysql_auth or
     guacamole_postgresql_auth) and
    _guacamole_db_populated['changed']

- name: config | Config local postgresql
  block:
    - name: config | Creating Guacamole DB
      postgresql_db:
        name: "{{ guacamole_postgresql_db['name'] }}"
        state: present
      become: true
      become_user: postgres

    - name: config | Creating Guacamole DB User
      postgresql_user:
        db: "{{ guacamole_postgresql_db['name'] }}"
        name: "{{ guacamole_postgresql_db['username'] }}"
        password: "{{ guacamole_postgresql_db['password'] }}"
        state: present
      become: true
      become_user: postgres

    - name: config | Checking If DB Has Been Populated
      stat:
        path: /etc/guacamole/.db_populated
      register: _guacamole_db_populated_check

    - name: config | Popluating DB
      shell: psql "{{ guacamole_postgresql_db['name'] }}" < "{{ guacamole_src_dir + '/' + 'guacamole-auth-jdbc-' + guacamole_version + '/postgresql/schema/' + item }}"
      become: true
      become_user: postgres
      register: _guacamole_db_populated
      notify:
        - "restart {{ guacamole_tomcat_service }}"
        - kill guacd
        - restart guacd
      with_items:
        - 001-create-schema.sql
        - 002-create-admin-user.sql
      when: not _guacamole_db_populated_check['stat']['exists']

    - name: config | Setting DB permissions
      postgresql_privs:
        database: "{{ guacamole_postgresql_db['name'] }}"
        schema: public
        role: "{{ guacamole_postgresql_db['username'] }}"
        type: table
        obj: ALL_IN_SCHEMA
        privs: SELECT,INSERT,UPDATE,DELETE
      become: true
      become_user: postgres

    - name: config | Setting DB permissions
      postgresql_privs:
        database: "{{ guacamole_postgresql_db['name'] }}"
        schema: public
        role: "{{ guacamole_postgresql_db['username'] }}"
        type: sequence
        obj: ALL_IN_SCHEMA
        privs: all
      become: true
      become_user: postgres

    - name: config | Marking DB As Populated # noqa 503
      file:
        path: /etc/guacamole/.db_populated
        state: touch
      become: true
  when: guacamole_postgresql_auth and not guacamole_prosgresql_external

- name: config | Config remote postgresql
  block:
    - name: config | Creating Guacamole DB
      postgresql_db:
        name: "{{ guacamole_postgresql_db['name'] }}"
        state: present
        login_host: "{{ guacamole_postgresql_db['host'] }}"

    - name: config | Creating Guacamole DB User
      postgresql_user:
        db: "{{ guacamole_postgresql_db['name'] }}"
        name: "{{ guacamole_postgresql_db['username'] }}"
        password: "{{ guacamole_postgresql_db['password'] }}"
        login_host: "{{ guacamole_postgresql_db['host'] }}"
        state: present

    - name: config | Checking If DB Has Been Populated
      stat:
        path: /etc/guacamole/.db_populated
      register: _guacamole_db_populated_check

    - name: config | Popluating DB
      shell: psql -h "{{ guacamole_postgresql_db['host'] }}" -d "{{ guacamole_postgresql_db['name'] }}" < "{{ guacamole_src_dir + '/' + 'guacamole-auth-jdbc-' + guacamole_version + '/postgresql/schema/' + item }}"
      register: _guacamole_db_populated
      notify:
        - "restart {{ guacamole_tomcat_service }}"
        - kill guacd
        - restart guacd
      with_items:
        - 001-create-schema.sql
        - 002-create-admin-user.sql
      when: not _guacamole_db_populated_check['stat']['exists']

    - name: config | Setting DB permissions
      postgresql_privs:
        database: "{{ guacamole_postgresql_db['name'] }}"
        schema: public
        role: "{{ guacamole_postgresql_db['username'] }}"
        type: table
        obj: ALL_IN_SCHEMA
        privs: SELECT,INSERT,UPDATE,DELETE

    - name: config | Setting DB permissions
      postgresql_privs:
        database: "{{ guacamole_postgresql_db['name'] }}"
        schema: public
        role: "{{ guacamole_postgresql_db['username'] }}"
        type: sequence
        obj: ALL_IN_SCHEMA
        privs: all

    - name: config | Marking DB As Populated # noqa 503
      file:
        path: /etc/guacamole/.db_populated
        state: touch
      become: true
  when: guacamole_postgresql_auth and guacamole_prosgresql_external

- name: config | Creating Tomcat symlink For guacamole.properties
  file:
    src: /etc/guacamole
    dest: "{{ '/usr/share/' + guacamole_tomcat + '/.guacamole' }}"
    state: link
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"
  become: true
  notify:
    - "restart {{ guacamole_tomcat_service }}"
    - kill guacd
    - restart guacd
